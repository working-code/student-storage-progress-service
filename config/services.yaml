# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:

services:
  # default configuration for services in *this* file
  _defaults:
    autowire: true      # Automatically injects dependencies in your services.
    autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

  # makes classes in src/ available to be used as services
  # this creates a service per class whose id is the fully-qualified class name
  App\:
    resource: '../src/'
    exclude:
      - '../src/DependencyInjection/'
      - '../src/Entity/'
      - '../src/Kernel.php'

  # add more service definitions when explicit configuration is needed
  # please note that last definitions always *replace* previous ones

  App\Doctrine\MigrationEventSubscriber:
    tags:
      - { name: 'doctrine.event_subscriber', connection: default }

  App\EventListener\ValidationApiExceptionListener:
    tags:
      - { name: kernel.event_listener, event: !php/const Symfony\Component\HttpKernel\KernelEvents::EXCEPTION }
  App\EventListener\NotFoundHttpExceptionListener:
    tags:
      - { name: kernel.event_listener, event: !php/const Symfony\Component\HttpKernel\KernelEvents::EXCEPTION }

  App\Symfony\MainParamConvertor:
    autoconfigure: true
    tags:
      - { name: request.param_converter, converter: !php/const App\Symfony\MainParamConvertor::MAIN_CONVERTOR }

  App\Service\AuthService:
    arguments:
      $tokenTTL: '%env(JWT_TTL_SEC)%'

  App\Service\AsyncService:
    calls:
      - [
        'addProducer',
        [ !php/const App\Service\AsyncService::RECALCULATE_SKILLS_FOR_USER, '@old_sound_rabbit_mq.recalculate_skills_for_user_producer' ]
      ]

  redis_client:
    class: Redis
    factory: Symfony\Component\Cache\Adapter\RedisAdapter::createConnection
    arguments:
      - '%env(REDIS_DSN)%'

  redis_adapter:
    class: Symfony\Component\Cache\Adapter\RedisTagAwareAdapter
    arguments:
      - '@redis_client'
      - 'student-storage-progress-service'

when@test:
  services:
    App\DTO\Builder\CourseDTOWrapperBuilder:
      public: true
      arguments:
        $courseDTOBuilder: '@App\DTO\Builder\CourseDTOBuilder'

    App\DTO\Builder\LessonWrapperDTOBuilder:
      public: true
      arguments:
        $lessonDTOBuilder: '@App\DTO\Builder\LessonDTOBuilder'
